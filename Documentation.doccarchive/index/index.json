{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/capitalannotation\/init(country:)","title":"init(country: Country)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/capitalannotation\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/countries_iliad\/capitalannotation\/subtitle","title":"var subtitle: String?","type":"property"},{"path":"\/documentation\/countries_iliad\/capitalannotation\/title","title":"var title: String?","type":"property"}],"path":"\/documentation\/countries_iliad\/capitalannotation","title":"CapitalAnnotation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmodel\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmodel\/countries","title":"var countries: [Country]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmodel\/lookupby(cca3:)","title":"func lookupBy(cca3: String) -> Country?","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmodel\/retrivecountries()","title":"func retriveCountries()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmodel\/samplecountries","title":"static let sampleCountries: [Country]","type":"property"},{"path":"\/documentation\/countries_iliad\/countriesmodel\/shared","title":"static let shared: CountriesModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmodel\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/countries_iliad\/countriesmodel\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/countriesmodel","title":"CountriesModel","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/bordercard\/init(border:)","title":"init(border: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/bordercard\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/countries_iliad\/bordercard\/border","title":"var border: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(activationpoint:)-26egt","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(activationpoint:)-5sgrs","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityaction(named:_:)-52k7y","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityaction(named:_:)-56wcb","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityaction(named:_:)-6ey15","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityactivationpoint(_:)-443jj","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityactivationpoint(_:)-7veit","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitycustomcontent(_:_:importance:)-1ed4y","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitycustomcontent(_:_:importance:)-439mq","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitycustomcontent(_:_:importance:)-546aw","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitycustomcontent(_:_:importance:)-5u3yz","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitycustomcontent(_:_:importance:)-6ta9r","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitycustomcontent(_:_:importance:)-8ispj","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitycustomcontent(_:_:importance:)-9vexg","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitycustomcontent(_:_:importance:)-9y503","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityhint(_:)-44b8r","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityhint(_:)-71n5l","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityhint(_:)-7je3i","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityinputlabels(_:)-3279j","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityinputlabels(_:)-4w3ki","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityinputlabels(_:)-6qgb3","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitylabel(_:)-9cx2d","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitylabel(_:)-9swew","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitylabel(_:)-nmgr","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:)-2tdte","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:)-3qejq","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:)-8j7gb","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:)-z1nm","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:entryid:entrylabel:)-2kvg6","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:entryid:entrylabel:)-3vef6","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:entryid:entrylabel:)-4t6tr","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:entryid:entrylabel:)-6ldmb","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:entrylabel:)-3nzpy","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:entrylabel:)-5iw36","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:entrylabel:)-772ul","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:entries:entrylabel:)-9qdac","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:textranges:)-2m5x3","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:textranges:)-44zb4","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:textranges:)-4j0hs","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotor(_:textranges:)-9z8k9","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityvalue(_:)-1m0vg","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityvalue(_:)-8os6u","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/accessibilityvalue(_:)-8xcmb","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:actions:)-2jyae","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:actions:)-4ke91","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:actions:)-6cw4j","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:actions:message:)-44yv5","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:actions:message:)-6sdjl","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:actions:message:)-7mggy","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:presenting:actions:)-59a5k","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:presenting:actions:)-8fpnh","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:presenting:actions:)-9luwa","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:presenting:actions:message:)-3immq","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:presenting:actions:message:)-4k00h","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(_:ispresented:presenting:actions:message:)-7zrt","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alignmentguide(_:computevalue:)-1q818","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/alignmentguide(_:computevalue:)-yw9i","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/aspectratio(_:contentmode:)-3kxq","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/aspectratio(_:contentmode:)-9om8l","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/background(_:in:fillstyle:)-5svcy","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/background(_:in:fillstyle:)-63b8m","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/background(in:fillstyle:)-1dpb3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/background(in:fillstyle:)-xw3q","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/badge(_:)-3ark4","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/badge(_:)-4etzs","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/badge(_:)-69ehr","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/badge(_:)-bxe2","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/buttonstyle(_:)-397rk","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/buttonstyle(_:)-3a0me","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2bdbo","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:actions:)-671cw","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9esgb","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-270v8","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3k2xk","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-51ea2","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4wr3m","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5fi3j","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5nvp","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1dw2","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2c70d","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9wwgs","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1tsol","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9pxjj","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1i8oo","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6hxc","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focusedobject(_:)-2ddrc","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focusedobject(_:)-ch1l","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focusedsceneobject(_:)-7bz69","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focusedsceneobject(_:)-ym0i","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focusedscenevalue(_:_:)-1h0tg","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focusedscenevalue(_:_:)-2e8oc","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focusedvalue(_:_:)-6prhf","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/focusedvalue(_:_:)-xesq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/help(_:)-50sj4","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/help(_:)-61ukj","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/help(_:)-994at","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/keyboardshortcut(_:)-5mfnf","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/keyboardshortcut(_:)-753f1","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/linelimit(_:)-1t61u","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/linelimit(_:)-3wyzu","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/linelimit(_:)-61xo7","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/linelimit(_:)-7ry30","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/listitemtint(_:)-19enc","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/listitemtint(_:)-5b0hi","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbartitle(_:)-4kp97","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbartitle(_:)-9o1o8","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbartitle(_:)-a9be","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbartitle(_:displaymode:)-2t1r9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbartitle(_:displaymode:)-4blxl","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationbartitle(_:displaymode:)-lbge","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationdocument(_:preview:)-5k9tx","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationdocument(_:preview:)-7wb3v","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationdocument(_:preview:)-8lpc7","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationdocument(_:preview:)-921cb","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationtitle(_:)-3aj64","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationtitle(_:)-4qral","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationtitle(_:)-5w0ee","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationtitle(_:)-767p2","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/navigationtitle(_:)-ulsw","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/ondrop(of:delegate:)-6kusg","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ondrop(of:delegate:)-7ss5h","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ondrop(of:istargeted:perform:)-200g9","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/ondrop(of:istargeted:perform:)-22jkk","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/ondrop(of:istargeted:perform:)-4x9wx","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ondrop(of:istargeted:perform:)-cxjh","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/padding(_:)-92ebp","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/padding(_:)-9uhb2","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/renameaction(_:)-2cp76","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/renameaction(_:)-4ipim","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/safeareainset(edge:alignment:spacing:content:)-11ktm","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/safeareainset(edge:alignment:spacing:content:)-16qdx","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scaleeffect(_:anchor:)-50xis","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scaleeffect(_:anchor:)-72e2s","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:placement:prompt:)-5y56w","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:placement:prompt:)-7ggik","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:placement:prompt:)-7ljek","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:placement:prompt:suggestions:)-4pf6d","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:placement:prompt:suggestions:)-5qjz8","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:placement:prompt:suggestions:)-825m","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:tokens:placement:prompt:token:)-1xns3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:tokens:placement:prompt:token:)-3y3fn","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:tokens:placement:prompt:token:)-6hzgp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1kold","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1pdfj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9v8do","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/bordercard\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/toolbar(content:)-8ikjz","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/toolbar(content:)-9wgxw","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/bordercard\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/countries_iliad\/bordercard\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/bordercard","title":"BorderCard","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/bordercard_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/bordercard_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/bordercard_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/countries_iliad\/bordercard_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/bordercard_previews","title":"BorderCard_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/init()","title":"init()","type":"init"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/init(selectedcountry:)","title":"init(selectedCountry: Country?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/selectedcountry","title":"var selectedCountry: Country?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(activationpoint:)-6e7wj","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(activationpoint:)-80w1q","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityaction(named:_:)-1nkau","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityaction(named:_:)-4qpw8","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityaction(named:_:)-69vvh","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityactivationpoint(_:)-79pjr","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityactivationpoint(_:)-9k11f","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitycustomcontent(_:_:importance:)-368ty","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitycustomcontent(_:_:importance:)-3rj38","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitycustomcontent(_:_:importance:)-4o59i","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitycustomcontent(_:_:importance:)-4y4g2","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitycustomcontent(_:_:importance:)-5l6fn","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitycustomcontent(_:_:importance:)-7ko8o","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitycustomcontent(_:_:importance:)-9bpqv","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitycustomcontent(_:_:importance:)-9qjjn","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityhint(_:)-1jbzy","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityhint(_:)-7n96k","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityhint(_:)-83mqi","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityinputlabels(_:)-39fdo","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityinputlabels(_:)-97tzi","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityinputlabels(_:)-qnf5","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitylabel(_:)-2dp4i","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitylabel(_:)-64q1e","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitylabel(_:)-ez30","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:)-3yjbl","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:)-5piam","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:)-60o09","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:)-7rhuz","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:entryid:entrylabel:)-2mfa0","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:entryid:entrylabel:)-659lb","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:entryid:entrylabel:)-s3m0","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:entryid:entrylabel:)-xeyl","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:entrylabel:)-4dreg","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:entrylabel:)-6eaq9","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:entrylabel:)-6ik8a","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:entries:entrylabel:)-8m1qz","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:textranges:)-34pkd","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:textranges:)-51bty","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:textranges:)-5loqu","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotor(_:textranges:)-hbmu","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityvalue(_:)-10exe","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityvalue(_:)-2kxg9","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/accessibilityvalue(_:)-eb7j","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:actions:)-1v96k","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:actions:)-572gi","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:actions:)-6aw2b","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:actions:message:)-5ikse","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:actions:message:)-h0v2","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:actions:message:)-zmmk","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:presenting:actions:)-3xn3d","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:presenting:actions:)-5vm20","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:presenting:actions:)-k0g9","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:presenting:actions:message:)-3sym3","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:presenting:actions:message:)-5sq87","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(_:ispresented:presenting:actions:message:)-66c7n","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alignmentguide(_:computevalue:)-7jmq","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/alignmentguide(_:computevalue:)-9pzni","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/aspectratio(_:contentmode:)-3yssg","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/aspectratio(_:contentmode:)-86v6u","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/background(_:in:fillstyle:)-4efhz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/background(_:in:fillstyle:)-7ej4g","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/background(in:fillstyle:)-5bed","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/background(in:fillstyle:)-8cpyh","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/badge(_:)-2p3sm","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/badge(_:)-3vz1l","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/badge(_:)-8ugeo","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/badge(_:)-rf41","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/buttonstyle(_:)-66lmj","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/buttonstyle(_:)-6athx","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:actions:)-156ks","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3q0zh","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5cggd","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5ejf7","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-67uql","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9knmm","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2enpt","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-37o6a","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5tnjq","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-13oug","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4kdc9","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7r7mf","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2a1i","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6809r","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fileexporter(ispresented:documents:contenttype:oncompletion:)-42n4i","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7ladd","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focusedobject(_:)-5wqtz","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focusedobject(_:)-8r3l1","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focusedsceneobject(_:)-6x54w","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focusedsceneobject(_:)-8f4t1","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focusedscenevalue(_:_:)-1pzvu","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focusedscenevalue(_:_:)-93wmy","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focusedvalue(_:_:)-7qhkj","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/focusedvalue(_:_:)-xx8q","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/help(_:)-50gpb","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/help(_:)-52cw5","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/help(_:)-97jlj","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/keyboardshortcut(_:)-2qlof","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/keyboardshortcut(_:)-4yesu","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/linelimit(_:)-53xdp","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/linelimit(_:)-7k85d","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/linelimit(_:)-9n2g","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/linelimit(_:)-xj14","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/listitemtint(_:)-1exbc","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/listitemtint(_:)-8mmu0","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbartitle(_:)-4qgr7","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbartitle(_:)-5kitu","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbartitle(_:)-8ernl","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbartitle(_:displaymode:)-28vtx","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbartitle(_:displaymode:)-30vpb","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbartitle(_:displaymode:)-596k8","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationdocument(_:preview:)-234wf","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationdocument(_:preview:)-30duw","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationdocument(_:preview:)-5wjc2","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationdocument(_:preview:)-9tmhz","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationtitle(_:)-2h09e","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationtitle(_:)-3wvvl","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationtitle(_:)-4hfy7","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationtitle(_:)-91m2k","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationtitle(_:)-949k0","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/ondrop(of:delegate:)-9qptc","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ondrop(of:delegate:)-z9sh","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/ondrop(of:istargeted:perform:)-6ql2c","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ondrop(of:istargeted:perform:)-8ojvt","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/ondrop(of:istargeted:perform:)-91piu","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ondrop(of:istargeted:perform:)-94wt0","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/padding(_:)-1kfvw","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/padding(_:)-3xpg2","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/renameaction(_:)-5cbl4","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/renameaction(_:)-8d9h9","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/safeareainset(edge:alignment:spacing:content:)-12p5p","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/safeareainset(edge:alignment:spacing:content:)-1zdcg","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scaleeffect(_:anchor:)-4cumv","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scaleeffect(_:anchor:)-8050t","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:placement:prompt:)-1x1yn","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:placement:prompt:)-4p9eb","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:placement:prompt:)-5qpue","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:placement:prompt:suggestions:)-1guhj","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:placement:prompt:suggestions:)-3f1yd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:placement:prompt:suggestions:)-7ps6z","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:tokens:placement:prompt:token:)-20jvm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:tokens:placement:prompt:token:)-84xct","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:tokens:placement:prompt:token:)-9rpyv","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3inj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5e99b","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8niyc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countriesmaster\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/toolbar(content:)-8j34s","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/toolbar(content:)-wavf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countriesmaster\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/countries_iliad\/countriesmaster\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/countriesmaster","title":"CountriesMaster","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmaster_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmaster_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countriesmaster_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/countries_iliad\/countriesmaster_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/countriesmaster_previews","title":"CountriesMaster_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countries_iliadapp\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countries_iliadapp\/body","title":"var body: some Scene","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countries_iliadapp\/main()","title":"static func main()","type":"method"}],"path":"\/documentation\/countries_iliad\/countries_iliadapp\/app-implementations","title":"App Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/countries_iliadapp","title":"Countries_IliadApp","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/country\/init(id:name:emojiflag:region:subregion:cca3:borderscca3:currency:capitalcoordinate:capital:area:languages:sovereignstate:)","title":"init(id: UUID, name: String, emojiFlag: String, region: String, subregion: String?, cca3: String, bordersCCA3: [String], currency: String?, capitalCoordinate: [Double]?, capital: String?, area: Double, languages: [String]?, sovereignState: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/country\/alllanguages","title":"var allLanguages: String","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/area","title":"var area: Double","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/borderscca3","title":"var bordersCCA3: [String]","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/capital","title":"var capital: String?","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/capitalcoordinate","title":"var capitalCoordinate: [Double]?","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/cca3","title":"var cca3: String","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/currency","title":"var currency: String?","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/emojiflag","title":"var emojiFlag: String","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/id-7by5b","title":"var id: UUID","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/languages","title":"var languages: [String]?","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/region","title":"var region: String","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/sovereignstate","title":"var sovereignState: Bool","type":"property"},{"path":"\/documentation\/countries_iliad\/country\/subregion","title":"var subregion: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/country\/haslanguage(called:)","title":"func hasLanguage(called: String) -> Bool","type":"method"},{"path":"\/documentation\/countries_iliad\/country\/hasregion(from:)","title":"func hasRegion(from: [Region]) -> Bool","type":"method"},{"path":"\/documentation\/countries_iliad\/country\/name(contains:)","title":"func name(contains: String) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/country\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/countries_iliad\/country\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/country\/id-4q43j","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/countries_iliad\/country\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/country","title":"Country","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrydetail\/init(horizontalsizeclass:country:)","title":"init(horizontalSizeClass: Environment<UserInterfaceSizeClass?>, country: Binding<Country?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrydetail\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/countries_iliad\/countrydetail\/country","title":"var country: Country?","type":"property"},{"path":"\/documentation\/countries_iliad\/countrydetail\/horizontalsizeclass","title":"var horizontalSizeClass: UserInterfaceSizeClass?","type":"property"},{"path":"\/documentation\/countries_iliad\/countrydetail\/twocolumnsgrid","title":"let twoColumnsGrid: [GridItem]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(activationpoint:)-72oq2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(activationpoint:)-gb38","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityaction(named:_:)-1zb7c","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityaction(named:_:)-206ki","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityaction(named:_:)-6tj56","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityactivationpoint(_:)-84wvk","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityactivationpoint(_:)-9aac0","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitycustomcontent(_:_:importance:)-16tlj","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitycustomcontent(_:_:importance:)-22vp2","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitycustomcontent(_:_:importance:)-2n0i1","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitycustomcontent(_:_:importance:)-4e1jg","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitycustomcontent(_:_:importance:)-4s9m8","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitycustomcontent(_:_:importance:)-6h088","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitycustomcontent(_:_:importance:)-8kvyi","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitycustomcontent(_:_:importance:)-ylm8","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityhint(_:)-6009t","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityhint(_:)-6vw3k","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityhint(_:)-8ib3f","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityinputlabels(_:)-59qvf","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityinputlabels(_:)-5zbj8","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityinputlabels(_:)-es06","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitylabel(_:)-1gxhj","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitylabel(_:)-1nfpb","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitylabel(_:)-25giq","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:)-3fy4b","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:)-824p","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:)-8lpgy","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:)-8nk2f","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:entryid:entrylabel:)-3e17s","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:entryid:entrylabel:)-3n2br","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:entryid:entrylabel:)-6u5ln","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:entryid:entrylabel:)-83ox7","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:entrylabel:)-49uii","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:entrylabel:)-54mvt","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:entrylabel:)-858n4","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:entries:entrylabel:)-qldr","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:textranges:)-22a9s","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:textranges:)-3yc7x","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:textranges:)-68342","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotor(_:textranges:)-9ct3k","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityvalue(_:)-11v7j","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityvalue(_:)-24szd","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/accessibilityvalue(_:)-7et09","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:actions:)-28n4x","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:actions:)-5q0yw","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:actions:)-74332","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:actions:message:)-2l90m","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:actions:message:)-5icpg","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:actions:message:)-8naws","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:presenting:actions:)-1nsai","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:presenting:actions:)-3139k","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:presenting:actions:)-36w66","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:presenting:actions:message:)-14ml0","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:presenting:actions:message:)-89un","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(_:ispresented:presenting:actions:message:)-8a2no","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alignmentguide(_:computevalue:)-5a548","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/alignmentguide(_:computevalue:)-7is00","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/aspectratio(_:contentmode:)-61i4h","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/aspectratio(_:contentmode:)-svdn","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/background(_:in:fillstyle:)-9gfpj","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/background(_:in:fillstyle:)-9h335","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/background(in:fillstyle:)-2o8um","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/background(in:fillstyle:)-78kg2","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/badge(_:)-11e2s","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/badge(_:)-3eu62","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/badge(_:)-6py93","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/badge(_:)-8hyvk","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/buttonstyle(_:)-10vts","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/buttonstyle(_:)-ezmj","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3wt77","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5jb6c","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8onpi","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-12y1r","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-48fmq","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7j4xd","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-57ppz","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-78c5z","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-l5az","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1676t","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4wyky","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9goef","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5u4gb","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7uitq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6fsc2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8v28v","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focusedobject(_:)-5u3jg","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focusedobject(_:)-8c4tf","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focusedsceneobject(_:)-1wz1g","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focusedsceneobject(_:)-2qyvr","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focusedscenevalue(_:_:)-4uvxz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focusedscenevalue(_:_:)-7x6hi","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focusedvalue(_:_:)-6xde1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/focusedvalue(_:_:)-7st1e","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/help(_:)-8ccop","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/help(_:)-93i2r","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/help(_:)-9njae","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/keyboardshortcut(_:)-9xeh4","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/keyboardshortcut(_:)-hxwm","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/linelimit(_:)-12n6p","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/linelimit(_:)-7c72q","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/linelimit(_:)-7xc7","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/linelimit(_:)-8ouko","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/listitemtint(_:)-2nj33","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/listitemtint(_:)-8umxe","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbartitle(_:)-2efm1","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbartitle(_:)-8ttfg","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbartitle(_:)-rzsa","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbartitle(_:displaymode:)-3riwg","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbartitle(_:displaymode:)-7qvl1","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbartitle(_:displaymode:)-87do7","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationdocument(_:preview:)-1mpt2","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationdocument(_:preview:)-2ihcl","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationdocument(_:preview:)-4ihuw","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationdocument(_:preview:)-78o9m","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationtitle(_:)-1p7oj","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationtitle(_:)-5cpb0","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationtitle(_:)-8hsoe","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationtitle(_:)-8irc9","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/navigationtitle(_:)-93chb","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/ondrop(of:delegate:)-1dj66","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ondrop(of:delegate:)-2gv4b","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/ondrop(of:istargeted:perform:)-22zs9","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ondrop(of:istargeted:perform:)-2y6dq","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/ondrop(of:istargeted:perform:)-45pun","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ondrop(of:istargeted:perform:)-4cziw","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/padding(_:)-2s2aq","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/padding(_:)-7y3fx","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/renameaction(_:)-1fh9u","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/renameaction(_:)-6ujeg","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/safeareainset(edge:alignment:spacing:content:)-1l8kq","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/safeareainset(edge:alignment:spacing:content:)-7t2zz","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scaleeffect(_:anchor:)-47rwr","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scaleeffect(_:anchor:)-8hbr","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:placement:prompt:)-14h09","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:placement:prompt:)-250q6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:placement:prompt:)-p7jp","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:placement:prompt:suggestions:)-3t0td","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:placement:prompt:suggestions:)-855b6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:placement:prompt:suggestions:)-8mywe","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:tokens:placement:prompt:token:)-2cl3f","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:tokens:placement:prompt:token:)-5fzwz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:tokens:placement:prompt:token:)-9umvb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1h20m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7hx5w","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-86osy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrydetail\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/toolbar(content:)-1qjzn","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/toolbar(content:)-q3dz","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrydetail\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/countries_iliad\/countrydetail\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/countrydetail","title":"CountryDetail","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrydetail_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrydetail_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrydetail_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/countries_iliad\/countrydetail_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/countrydetail_previews","title":"CountryDetail_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/init(country:showinglanguagefootnote:)","title":"init(country: Country, showingLanguageFootnote: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/country","title":"var country: Country","type":"property"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/showinglanguagefootnote","title":"var showingLanguageFootnote: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(activationpoint:)-37dpr","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(activationpoint:)-lvna","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityaction(named:_:)-6bnyi","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityaction(named:_:)-6phdi","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityaction(named:_:)-6tc2a","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityactivationpoint(_:)-32ozr","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityactivationpoint(_:)-7zzu5","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitycustomcontent(_:_:importance:)-1kp1c","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitycustomcontent(_:_:importance:)-1o4p9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitycustomcontent(_:_:importance:)-33h5c","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitycustomcontent(_:_:importance:)-59eu6","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitycustomcontent(_:_:importance:)-6enyf","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitycustomcontent(_:_:importance:)-7ehc6","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitycustomcontent(_:_:importance:)-9on84","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitycustomcontent(_:_:importance:)-9yaur","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityhint(_:)-3obk1","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityhint(_:)-7rve7","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityhint(_:)-9omyw","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityinputlabels(_:)-2yfoo","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityinputlabels(_:)-5jm7t","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityinputlabels(_:)-5rvjh","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitylabel(_:)-3v3pd","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitylabel(_:)-4kxgk","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitylabel(_:)-74lur","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:)-5dcz5","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:)-75wi8","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:)-92sc7","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:)-9y1lc","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:entryid:entrylabel:)-7kx98","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:entryid:entrylabel:)-80ea4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:entryid:entrylabel:)-95s9s","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:entryid:entrylabel:)-9ev5v","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:entrylabel:)-27sgb","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:entrylabel:)-3eqfo","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:entrylabel:)-3g5jo","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:entries:entrylabel:)-6icri","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:textranges:)-498r3","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:textranges:)-4w7en","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:textranges:)-7u9qp","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotor(_:textranges:)-95n9i","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityvalue(_:)-1g3m3","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityvalue(_:)-2c0me","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/accessibilityvalue(_:)-3klc9","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:actions:)-575n6","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:actions:)-5eay","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:actions:)-7aeip","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:actions:message:)-4sr8s","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:actions:message:)-97mtx","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:actions:message:)-9hqs1","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:presenting:actions:)-2g8yc","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:presenting:actions:)-3cdpj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:presenting:actions:)-79re3","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:presenting:actions:message:)-46up1","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:presenting:actions:message:)-7xj1","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(_:ispresented:presenting:actions:message:)-c8gs","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alignmentguide(_:computevalue:)-3bi9j","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/alignmentguide(_:computevalue:)-98yuo","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/aspectratio(_:contentmode:)-4npt5","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/aspectratio(_:contentmode:)-8l3oy","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/background(_:in:fillstyle:)-1ncv5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/background(_:in:fillstyle:)-9b6m1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/background(in:fillstyle:)-3cw1w","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/background(in:fillstyle:)-5q03h","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/badge(_:)-2hswn","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/badge(_:)-42jj8","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/badge(_:)-4xa3q","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/badge(_:)-pdvp","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/buttonstyle(_:)-3w0p","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/buttonstyle(_:)-8z20n","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-11mw9","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4crle","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4k80h","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2x81","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4puqa","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9ay0u","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-83rxd","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8tum2","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9u99l","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2j6hy","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-67zdp","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-pbzz","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4za3l","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9i8vr","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2v5l7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5ujcv","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focusedobject(_:)-503wv","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focusedobject(_:)-5ha7t","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focusedsceneobject(_:)-2hbia","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focusedsceneobject(_:)-3f5hx","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focusedscenevalue(_:_:)-3xbrg","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focusedscenevalue(_:_:)-4vlyr","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focusedvalue(_:_:)-2sv2t","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/focusedvalue(_:_:)-f70g","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/help(_:)-2nxjy","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/help(_:)-72sor","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/help(_:)-8misf","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/keyboardshortcut(_:)-38gel","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/keyboardshortcut(_:)-3avzu","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/linelimit(_:)-3iz8z","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/linelimit(_:)-7s1ep","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/linelimit(_:)-hzzo","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/linelimit(_:)-k8iv","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/listitemtint(_:)-2c7v1","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/listitemtint(_:)-2rk6z","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbartitle(_:)-1k5a0","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbartitle(_:)-8brro","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbartitle(_:)-9pbpn","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbartitle(_:displaymode:)-1iitr","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbartitle(_:displaymode:)-27kef","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbartitle(_:displaymode:)-5l4wa","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationdocument(_:preview:)-2cia9","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationdocument(_:preview:)-8piji","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationdocument(_:preview:)-90xl8","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationdocument(_:preview:)-9wmzi","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationtitle(_:)-50uuz","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationtitle(_:)-5vzjp","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationtitle(_:)-5xlt6","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationtitle(_:)-7mww4","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationtitle(_:)-8ruly","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ondrop(of:delegate:)-4lzjf","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/ondrop(of:delegate:)-6v0mb","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/ondrop(of:istargeted:perform:)-3sihh","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/ondrop(of:istargeted:perform:)-3ywxb","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ondrop(of:istargeted:perform:)-6zdwp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ondrop(of:istargeted:perform:)-7wz7z","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/padding(_:)-414g5","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/padding(_:)-8166a","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/renameaction(_:)-4tt94","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/renameaction(_:)-7w5nu","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/safeareainset(edge:alignment:spacing:content:)-4kimp","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/safeareainset(edge:alignment:spacing:content:)-72sx0","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scaleeffect(_:anchor:)-tr91","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scaleeffect(_:anchor:)-ve60","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:placement:prompt:)-5amdn","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:placement:prompt:)-5gz8q","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:placement:prompt:)-9akb0","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:placement:prompt:suggestions:)-3g9c3","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:placement:prompt:suggestions:)-6vfhc","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:placement:prompt:suggestions:)-8lmn","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:tokens:placement:prompt:token:)-1t9gy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:tokens:placement:prompt:token:)-4o1b3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:tokens:placement:prompt:token:)-8qe3t","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1ijlc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1ir26","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-jqtb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/countrylistelement\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/toolbar(content:)-4zdo2","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/toolbar(content:)-7bwuw","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/countrylistelement\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/countries_iliad\/countrylistelement\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/countrylistelement","title":"CountryListElement","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrylistelement_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrylistelement_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/countrylistelement_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/countries_iliad\/countrylistelement_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/countrylistelement_previews","title":"CountryListElement_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier\/init(items:placeholder:)","title":"init(items: Items, placeholder: AnyView)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier\/items","title":"let items: Items","type":"property"},{"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier\/placeholder","title":"let placeholder: AnyView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/emptyplaceholdermodifier","title":"EmptyPlaceholderModifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/filterpopover\/init(selectedregions:showingpopover:)","title":"init(selectedRegions: Binding<[Region]>, showingPopover: Binding<Bool>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/filterpopover\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/countries_iliad\/filterpopover\/selectedregions","title":"var selectedRegions: [Region]","type":"property"},{"path":"\/documentation\/countries_iliad\/filterpopover\/showingpopover","title":"var showingPopover: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(activationpoint:)-8e5sh","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(activationpoint:)-p9s8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityaction(named:_:)-4cg0x","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityaction(named:_:)-7pgpi","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityaction(named:_:)-8ltl7","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityactivationpoint(_:)-3xner","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityactivationpoint(_:)-8lrup","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitycustomcontent(_:_:importance:)-16gma","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitycustomcontent(_:_:importance:)-1dt9v","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitycustomcontent(_:_:importance:)-1xwzt","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitycustomcontent(_:_:importance:)-2i224","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitycustomcontent(_:_:importance:)-4qt7v","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitycustomcontent(_:_:importance:)-7hl13","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitycustomcontent(_:_:importance:)-892o1","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitycustomcontent(_:_:importance:)-91xt2","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityhint(_:)-2mxab","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityhint(_:)-63qju","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityhint(_:)-p719","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityinputlabels(_:)-14ao6","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityinputlabels(_:)-2orjo","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityinputlabels(_:)-5gd6o","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitylabel(_:)-1fktp","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitylabel(_:)-1njpo","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitylabel(_:)-4an07","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:)-1ylm6","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:)-3cq99","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:)-54x8d","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:)-5c0qx","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:entryid:entrylabel:)-17un4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:entryid:entrylabel:)-9w0y6","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:entryid:entrylabel:)-ngas","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:entryid:entrylabel:)-y9m","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:entrylabel:)-2yesg","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:entrylabel:)-4er04","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:entrylabel:)-6dpuy","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:entries:entrylabel:)-98tv5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:textranges:)-59td0","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:textranges:)-5owxx","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:textranges:)-6jwux","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotor(_:textranges:)-9pic7","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityvalue(_:)-2r41f","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityvalue(_:)-5xp45","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/accessibilityvalue(_:)-7h2os","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:actions:)-3viqb","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:actions:)-7gsa5","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:actions:)-9rqb3","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:actions:message:)-1j58n","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:actions:message:)-1y02r","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:actions:message:)-3ij7x","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:presenting:actions:)-26ajb","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:presenting:actions:)-82od","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:presenting:actions:)-90avn","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:presenting:actions:message:)-3rtss","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:presenting:actions:message:)-68nr5","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(_:ispresented:presenting:actions:message:)-8lnui","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alignmentguide(_:computevalue:)-6lm9b","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/alignmentguide(_:computevalue:)-703lk","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/aspectratio(_:contentmode:)-3t7g6","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/aspectratio(_:contentmode:)-8frut","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/background(_:in:fillstyle:)-3cimt","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/background(_:in:fillstyle:)-5fidn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/background(in:fillstyle:)-3zb2j","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/background(in:fillstyle:)-85uqx","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/badge(_:)-4jwm3","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/badge(_:)-89xjj","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/badge(_:)-9ayh1","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/badge(_:)-9zg4g","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/buttonstyle(_:)-5a2r0","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/buttonstyle(_:)-6vv17","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3vcp6","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5it5k","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9b378","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1mo7h","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1vqm5","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7riu6","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4ppdg","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5697y","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5minp","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4pwvg","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6gj4s","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-705xe","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-48aii","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-88lqb","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1x4uj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fileexporter(ispresented:documents:contenttype:oncompletion:)-44dum","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focusedobject(_:)-2z307","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focusedobject(_:)-8nyka","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focusedsceneobject(_:)-19m8q","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focusedsceneobject(_:)-43jii","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focusedscenevalue(_:_:)-8ugsd","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focusedscenevalue(_:_:)-8y0s0","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focusedvalue(_:_:)-52v74","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/focusedvalue(_:_:)-949x5","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/help(_:)-4ilpg","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/help(_:)-6de9f","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/help(_:)-7yy2j","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/keyboardshortcut(_:)-2sbs0","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/keyboardshortcut(_:)-trnh","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/linelimit(_:)-1js2o","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/linelimit(_:)-54fwm","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/linelimit(_:)-6xmag","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/linelimit(_:)-7zvr","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/listitemtint(_:)-5j3z8","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/listitemtint(_:)-6gf63","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbartitle(_:)-2p8y8","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbartitle(_:)-51616","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbartitle(_:)-5zf92","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbartitle(_:displaymode:)-3vcoj","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbartitle(_:displaymode:)-6pcao","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbartitle(_:displaymode:)-7xb8a","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationdocument(_:preview:)-1jp6n","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationdocument(_:preview:)-2wo7y","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationdocument(_:preview:)-49x4e","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationdocument(_:preview:)-94z44","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationtitle(_:)-4blz6","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationtitle(_:)-52607","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationtitle(_:)-7905q","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationtitle(_:)-8knyv","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/navigationtitle(_:)-98an5","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/ondrop(of:delegate:)-4yiq3","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ondrop(of:delegate:)-81b8b","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ondrop(of:istargeted:perform:)-11geq","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/ondrop(of:istargeted:perform:)-2lhyy","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/ondrop(of:istargeted:perform:)-4ypq8","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ondrop(of:istargeted:perform:)-5bo35","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/padding(_:)-89x6c","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/padding(_:)-95f65","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/renameaction(_:)-523x3","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/renameaction(_:)-990wg","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/safeareainset(edge:alignment:spacing:content:)-7vztm","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/safeareainset(edge:alignment:spacing:content:)-8ld99","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scaleeffect(_:anchor:)-3c8f1","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scaleeffect(_:anchor:)-55276","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:placement:prompt:)-3rob5","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:placement:prompt:)-5cang","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:placement:prompt:)-5dzao","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:placement:prompt:suggestions:)-1mz6d","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:placement:prompt:suggestions:)-6cnzd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:placement:prompt:suggestions:)-717zf","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:tokens:placement:prompt:token:)-4t6qu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:tokens:placement:prompt:token:)-6xu8z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:tokens:placement:prompt:token:)-77o9o","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1rxb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-72r3p","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-y7nh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/filterpopover\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/toolbar(content:)-6thfk","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/toolbar(content:)-8emey","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/filterpopover\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/countries_iliad\/filterpopover\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/filterpopover","title":"FilterPopover","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/filterpopover_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/filterpopover_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/filterpopover_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/countries_iliad\/filterpopover_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/filterpopover_previews","title":"FilterPopover_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/mapview\/init(country:mapview:annotations:)","title":"init(country: Binding<Country?>, mapView: MKMapView, annotations: [MKAnnotation])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/mapview\/annotations","title":"var annotations: [MKAnnotation]","type":"property"},{"path":"\/documentation\/countries_iliad\/mapview\/country","title":"var country: Country?","type":"property"},{"path":"\/documentation\/countries_iliad\/mapview\/mapview","title":"var mapView: MKMapView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/mapview\/makeuiview(context:)","title":"func makeUIView(context: Context) -> some UIView","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/updateuiview(_:context:)","title":"func updateUIView(UIViewType, context: Context)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/mapview\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/mapview\/makecoordinator()","title":"func makeCoordinator() -> Self.Coordinator","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/sizethatfits(_:uiview:context:)","title":"func sizeThatFits(ProposedViewSize, uiView: Self.UIViewType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/mapview\/dismantleuiview(_:coordinator:)","title":"static func dismantleUIView(Self.UIViewType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/countries_iliad\/mapview\/uiviewrepresentable-implementations","title":"UIViewRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(activationpoint:)-39zm8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(activationpoint:)-c01p","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityaction(named:_:)-2r660","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityaction(named:_:)-2sula","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityaction(named:_:)-3eap4","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityactivationpoint(_:)-2fuyr","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityactivationpoint(_:)-84ex9","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitycustomcontent(_:_:importance:)-1shv6","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitycustomcontent(_:_:importance:)-37e2z","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitycustomcontent(_:_:importance:)-3i3sn","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitycustomcontent(_:_:importance:)-3k0s3","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitycustomcontent(_:_:importance:)-3snh3","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitycustomcontent(_:_:importance:)-5rzk","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitycustomcontent(_:_:importance:)-5u76a","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitycustomcontent(_:_:importance:)-8uis5","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityhint(_:)-4fpk","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityhint(_:)-62pwk","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityhint(_:)-73x9u","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityinputlabels(_:)-2ous7","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityinputlabels(_:)-5bhr","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityinputlabels(_:)-6ii9b","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitylabel(_:)-3srpb","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitylabel(_:)-475bq","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitylabel(_:)-4fzke","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:)-1b41b","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:)-36oru","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:)-3fsa6","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:)-4wni1","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:entryid:entrylabel:)-64grv","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7qwhy","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:entryid:entrylabel:)-920","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:entryid:entrylabel:)-adoo","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:entrylabel:)-2nfhl","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:entrylabel:)-2vo9n","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:entrylabel:)-6lzj4","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:entries:entrylabel:)-9ixcu","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:textranges:)-2f4wm","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:textranges:)-2gkru","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:textranges:)-49c5i","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotor(_:textranges:)-683nf","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityvalue(_:)-8njcn","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityvalue(_:)-8t9tg","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/accessibilityvalue(_:)-8tf1a","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:actions:)-438c7","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:actions:)-81zq","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:actions:)-tkq3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:actions:message:)-3vmm3","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:actions:message:)-68ek9","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:actions:message:)-8mwid","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:presenting:actions:)-2p6cb","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:presenting:actions:)-4g59y","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:presenting:actions:)-99gtq","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:presenting:actions:message:)-4d0fr","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:presenting:actions:message:)-6qnhy","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(_:ispresented:presenting:actions:message:)-7okxh","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alignmentguide(_:computevalue:)-8e6u7","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/alignmentguide(_:computevalue:)-8y5og","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/aspectratio(_:contentmode:)-3bs5n","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/aspectratio(_:contentmode:)-5rqo2","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/background(_:in:fillstyle:)-3syzc","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/background(_:in:fillstyle:)-uqa4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/background(in:fillstyle:)-12bof","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/background(in:fillstyle:)-9y3vm","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/badge(_:)-1kbet","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/badge(_:)-2lc0s","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/badge(_:)-5emcd","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/badge(_:)-9qsyg","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/buttonstyle(_:)-8py1p","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/buttonstyle(_:)-93ok2","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1jjcc","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9exen","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9fmzb","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2oc1i","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4g368","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-63g9s","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5e9jg","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6ewra","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-945dz","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6f3w6","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7c28b","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-wocw","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4jejo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4v02q","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3z5yw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5i8m3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focusedobject(_:)-45ax9","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focusedobject(_:)-a60c","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focusedsceneobject(_:)-1b03d","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focusedsceneobject(_:)-6uswg","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focusedscenevalue(_:_:)-2pl6q","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focusedscenevalue(_:_:)-5rzum","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focusedvalue(_:_:)-20fhq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/focusedvalue(_:_:)-20xnm","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/help(_:)-6v2ly","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/help(_:)-guua","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/help(_:)-i9db","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/keyboardshortcut(_:)-6afop","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/keyboardshortcut(_:)-stdm","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/linelimit(_:)-37hc3","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/linelimit(_:)-406hm","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/linelimit(_:)-84cwc","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/linelimit(_:)-dqzc","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/listitemtint(_:)-1q4w4","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/listitemtint(_:)-2u4d0","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbartitle(_:)-3ffxu","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbartitle(_:)-4x7fs","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbartitle(_:)-ja61","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbartitle(_:displaymode:)-8i3op","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbartitle(_:displaymode:)-8jclk","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationbartitle(_:displaymode:)-8mokp","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationdocument(_:preview:)-16ntf","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationdocument(_:preview:)-41e0b","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationdocument(_:preview:)-6a1t1","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationdocument(_:preview:)-7g7dz","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationtitle(_:)-60ppo","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationtitle(_:)-7vqg7","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationtitle(_:)-7w5nd","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationtitle(_:)-9etw3","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/navigationtitle(_:)-bsv3","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ondrop(of:delegate:)-59fan","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/ondrop(of:delegate:)-v3ef","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ondrop(of:istargeted:perform:)-1v5wq","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/ondrop(of:istargeted:perform:)-6rwam","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ondrop(of:istargeted:perform:)-8gvy0","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/ondrop(of:istargeted:perform:)-9gmry","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/padding(_:)-4xqjn","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/padding(_:)-6tmk5","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/renameaction(_:)-6rmnj","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/renameaction(_:)-79dni","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/safeareainset(edge:alignment:spacing:content:)-3frgp","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/safeareainset(edge:alignment:spacing:content:)-76ex9","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scaleeffect(_:anchor:)-7wekk","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scaleeffect(_:anchor:)-dxr","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:placement:prompt:)-1pqwh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:placement:prompt:)-7ati4","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:placement:prompt:)-9fxwk","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:placement:prompt:suggestions:)-5ytnf","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:placement:prompt:suggestions:)-72hw6","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:placement:prompt:suggestions:)-8uncz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:tokens:placement:prompt:token:)-3ztqq","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:tokens:placement:prompt:token:)-5nllg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:tokens:placement:prompt:token:)-8r4lu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4mfxn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8ecw2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9gj8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/mapview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/toolbar(content:)-1t1zz","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/toolbar(content:)-7tmpu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/mapview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/countries_iliad\/mapview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/mapview","title":"MapView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/region\/init(id:name:sfsymbol:)","title":"init(id: UUID, name: String, sfSymbol: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/region\/id-3u9bh","title":"var id: UUID","type":"property"},{"path":"\/documentation\/countries_iliad\/region\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/countries_iliad\/region\/sfsymbol","title":"var sfSymbol: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/region\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/countries_iliad\/region\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/region\/id-4p3g0","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/countries_iliad\/region\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/region","title":"Region","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/init(region:isselected:action:)","title":"init(region: Region, isSelected: Bool, action: () -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/action","title":"var action: () -> Void","type":"property"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/region","title":"var region: Region","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(activationpoint:)-5fzun","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(activationpoint:)-932r2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityaction(named:_:)-4ssdd","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityaction(named:_:)-6kch0","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityaction(named:_:)-rqsc","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityactivationpoint(_:)-5s7do","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityactivationpoint(_:)-spm4","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitycustomcontent(_:_:importance:)-1im0q","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitycustomcontent(_:_:importance:)-3bsm5","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitycustomcontent(_:_:importance:)-3e7r4","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitycustomcontent(_:_:importance:)-4hqp3","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitycustomcontent(_:_:importance:)-5mz83","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitycustomcontent(_:_:importance:)-5nh7g","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitycustomcontent(_:_:importance:)-671nh","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitycustomcontent(_:_:importance:)-6dubg","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityhint(_:)-6jwub","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityhint(_:)-7t2q9","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityhint(_:)-9t38z","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityinputlabels(_:)-7a0pc","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityinputlabels(_:)-8ax31","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityinputlabels(_:)-9xh1o","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitylabel(_:)-23bpp","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitylabel(_:)-30ezw","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitylabel(_:)-8fuxw","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:)-4n378","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:)-54umm","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:)-8du1e","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:)-9o8gv","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:entryid:entrylabel:)-34ior","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:entryid:entrylabel:)-3k5th","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:entryid:entrylabel:)-3nhq1","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:entryid:entrylabel:)-6vajo","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:entrylabel:)-10t6g","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:entrylabel:)-2irle","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:entrylabel:)-6pqqj","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:entries:entrylabel:)-8it7t","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:textranges:)-3posc","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:textranges:)-4r6fu","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:textranges:)-6wle6","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotor(_:textranges:)-8a1nn","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityvalue(_:)-2b5wq","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityvalue(_:)-2frx1","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/accessibilityvalue(_:)-5gy4y","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:actions:)-1wta","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:actions:)-3p8vt","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:actions:)-9rif2","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:actions:message:)-4xim9","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:actions:message:)-5p2mr","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:actions:message:)-652t7","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:presenting:actions:)-744x3","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:presenting:actions:)-8gyuw","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:presenting:actions:)-8iaj5","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:presenting:actions:message:)-395p8","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:presenting:actions:message:)-4ov1x","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(_:ispresented:presenting:actions:message:)-653m0","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alignmentguide(_:computevalue:)-6r1ad","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/alignmentguide(_:computevalue:)-ko2j","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/aspectratio(_:contentmode:)-3ij80","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/aspectratio(_:contentmode:)-5oc2e","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/background(_:in:fillstyle:)-51842","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/background(_:in:fillstyle:)-7bwcl","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/background(in:fillstyle:)-6mk7n","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/background(in:fillstyle:)-8feso","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/badge(_:)-3b0v0","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/badge(_:)-49v97","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/badge(_:)-64eio","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/badge(_:)-6sag8","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/buttonstyle(_:)-1pxn7","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/buttonstyle(_:)-1v9e3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6j31s","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9qp6y","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9ylzk","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-36cj5","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-81yxt","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8nz5u","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-31s90","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4v5mx","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-700cg","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1nhyl","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5yg74","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8zi09","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1apgt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-62t4m","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1vmcp","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3t1gj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focusedobject(_:)-8758","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focusedobject(_:)-f43e","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focusedsceneobject(_:)-35v9h","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focusedsceneobject(_:)-8qrw9","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focusedscenevalue(_:_:)-5v2sr","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focusedscenevalue(_:_:)-99a14","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focusedvalue(_:_:)-5lj36","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/focusedvalue(_:_:)-6q9q9","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/help(_:)-662wl","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/help(_:)-9mav","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/help(_:)-x1t0","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/keyboardshortcut(_:)-1pi8n","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/keyboardshortcut(_:)-216g1","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/linelimit(_:)-1fi3b","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/linelimit(_:)-920sa","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/linelimit(_:)-96g56","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/linelimit(_:)-9w21r","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/listitemtint(_:)-98chx","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/listitemtint(_:)-9iw3h","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbartitle(_:)-5z7vk","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbartitle(_:)-67ssc","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbartitle(_:)-qdkg","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbartitle(_:displaymode:)-4s6w1","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbartitle(_:displaymode:)-5ix6a","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbartitle(_:displaymode:)-9qxkr","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationdocument(_:preview:)-11syy","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationdocument(_:preview:)-34unr","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationdocument(_:preview:)-4l3ie","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationdocument(_:preview:)-5pyg1","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationtitle(_:)-1l6cx","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationtitle(_:)-22jmw","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationtitle(_:)-567r6","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationtitle(_:)-5a3r4","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationtitle(_:)-8auc2","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ondrop(of:delegate:)-16haz","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/ondrop(of:delegate:)-8q4qu","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ondrop(of:istargeted:perform:)-1fkka","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ondrop(of:istargeted:perform:)-3mcfd","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/ondrop(of:istargeted:perform:)-7f2lz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/ondrop(of:istargeted:perform:)-jyte","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/padding(_:)-79vkn","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/padding(_:)-95ab","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/renameaction(_:)-59w76","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/renameaction(_:)-5azy2","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/safeareainset(edge:alignment:spacing:content:)-4e3uy","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/safeareainset(edge:alignment:spacing:content:)-7w2th","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scaleeffect(_:anchor:)-3f8gs","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scaleeffect(_:anchor:)-7xwvz","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:placement:prompt:)-21viu","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:placement:prompt:)-4hac5","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:placement:prompt:)-7uytc","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:placement:prompt:suggestions:)-1qgk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:placement:prompt:suggestions:)-1z0ms","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:placement:prompt:suggestions:)-7wj3h","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:tokens:placement:prompt:token:)-1f39q","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:tokens:placement:prompt:token:)-1osnu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:tokens:placement:prompt:token:)-958h3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2qtst","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-948v6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9jhfx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/countries_iliad\/regionlistelement\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/toolbar(content:)-41w17","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/toolbar(content:)-5sxwl","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/countries_iliad\/regionlistelement\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/countries_iliad\/regionlistelement\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/regionlistelement","title":"RegionListElement","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/regionlistelement_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/regionlistelement_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/regionlistelement_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/countries_iliad\/regionlistelement_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/countries_iliad\/regionlistelement_previews","title":"RegionListElement_Previews","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/countries_iliad\/regions","title":"let regions: [Region]","type":"var"},{"path":"\/documentation\/countries_iliad\/restcountriesurl","title":"let restCountriesUrl: URL","type":"var"}],"path":"\/documentation\/countries_iliad","title":"Countries Iliad","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}